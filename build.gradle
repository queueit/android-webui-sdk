// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.1'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'io.github.gradle-nexus:publish-plugin:2.0.0'
    }
}
apply plugin: 'io.github.gradle-nexus.publish-plugin'

Properties localProps = new Properties()
if (rootProject.file("local.properties").exists()) {
    localProps.load(rootProject.file("local.properties").newDataInputStream())
}

subprojects {
    tasks.withType(Javadoc).all { enabled = false }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }

    ext {
        groupId = 'com.queue-it.androidsdk'
        libraryName = 'com.queue_it.androidsdk'
        libraryDescription = 'Android SDK to integrate with Queue-it'
        libraryVersion = "2.1.8"
        organization = "Queue-it"
        organizationUrl = "https://queue-it.com"

        artifact = 'library'
        siteUrl = "https://github.com/queueit/android-webui-sdk"
        gitUrl = "https://github.com/queueit/android-webui-sdk.git"

        licenseName = 'MIT'
        licenseUrl = 'MIT'
        allLicenses = ["MIT"]
        var = '7.0.0-alpha05'
        extraProperties = localProps

        SONATYPE_USERNAME = localProps.getProperty("SONATYPE_USERNAME") ?: System.getenv("SONATYPE_USERNAME")
        SONATYPE_PASSWORD = localProps.getProperty("SONATYPE_PASSWORD") ?: System.getenv("SONATYPE_PASSWORD")
        PGP_KEY = localProps.getProperty("PGP_KEY") ?: System.getenv("PGP_KEY")
        PGP_PASSWORD = localProps.getProperty("PGP_PASSWORD") ?: System.getenv("PGP_PASSWORD")
    }
}

nexusPublishing {
    packageGroup = groupId
    
    repositories {    
        sonatype {
            //stagingProfileId = "219f8fe296e7e"
            
            nexusUrl.set(uri("https://ossrh-staging-api.central.sonatype.com/service/local/"))
            snapshotRepositoryUrl.set(uri("https://central.sonatype.com/repository/maven-snapshots/"))
            
            username.set(SONATYPE_USERNAME)
            password.set(SONATYPE_PASSWORD)
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}